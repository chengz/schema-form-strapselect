angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-multiple="1" data-html="1" ng-options="item.value as item.name for item in form.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapmultiselectdynamic.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-multiple="1" data-html="1" ng-options="item.value as item.name for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label> sdfsdfsd<div class="form-group"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\')}}" data-html="1" ng-options="item.value as item.name for item in form.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselectdynamic.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="form-group" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\')}}" data-html="1" ng-options="item.value as item.name for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,r){var s=function(e,s,a){if("string"===s.type){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapselect",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.string.unshift(s);var a=function(e,s,a){if("array"===s.type){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapmultiselect",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.array.unshift(a);var o=function(e,s,a){if("string"===s.type){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapselectdynamic",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.string.unshift(o);var l=function(e,s,a){if("array"===s.type){var o=t.stdFormObj(e,s,a);return o.key=a.path,o.type="strapmultiselectdynamic",a.lookup[r.stringify(a.path)]=o,o}};t.defaults.array.unshift(l),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.createDirective("strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.createDirective("strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.createDirective("strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.addMapping("bootstrapDecorator","strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html"),e.createDirective("strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html")}]),angular.module("schemaForm").controller("StrapSelectController",["$scope","$http",function(t,e){t.items=[],t.fetchResult=function(r){if(r)if(r.callback)t.items=r.callback(r),console.log("items",t.items);else{if(r.http_post)return e.post(r.http_post.url,r.http_post.parameter).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed (URL: '"+String(r.http_post.url)+"' Parameter: "+String(r.http_post.parameter)+"\nError: "+e)});if(r.http_get)return e.get(r.http_get.url,r.http_get.parameter).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed (URL: '"+String(r.http_get.url)+"\nError: "+e)});if(r.async)return r.async.call(r).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed(Options: '"+String(r)+"\nError: "+e)})}else console.log("StrapSelectController.fetchResult : No options set")}}]);